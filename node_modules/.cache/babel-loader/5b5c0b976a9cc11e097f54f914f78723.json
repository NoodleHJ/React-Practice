{"ast":null,"code":"var _jsxFileName = \"/Users/jinghuang/Repository/react/React-Practice/src/components/Header/index.jsx\";\nimport React, { Component } from \"react\";\nimport { nanoid } from \"nanoid\";\nimport PropTypes from \"prop-types\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Header extends Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"please enter the task name, add enter\",\n        onKeyUp: e => {\n          if (e.keyCode !== 13) return;\n\n          if (e.target.value.trim() === \"\") {\n            alert(\"input cannot be empty\");\n            return;\n          }\n\n          const todo = {\n            id: nanoid(),\n            name: e.target.value,\n            done: false\n          };\n          e.target.value = \"\";\n          return this.props.addTodo(todo);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this);\n  }\n\n}\nHeader.propTypes = {\n  addTodo: PropTypes.func\n};","map":{"version":3,"sources":["/Users/jinghuang/Repository/react/React-Practice/src/components/Header/index.jsx"],"names":["React","Component","nanoid","PropTypes","Header","render","e","keyCode","target","value","trim","alert","todo","id","name","done","props","addTodo","propTypes","func"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,MAAT,QAAuB,QAAvB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,eAAe,MAAMC,MAAN,SAAqBH,SAArB,CAA+B;AAK5CI,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,6BACE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,WAAW,EAAC,uCAFd;AAGE,QAAA,OAAO,EAAGC,CAAD,IAAO;AACd,cAAIA,CAAC,CAACC,OAAF,KAAc,EAAlB,EAAsB;;AAEtB,cAAID,CAAC,CAACE,MAAF,CAASC,KAAT,CAAeC,IAAf,OAA0B,EAA9B,EAAkC;AAChCC,YAAAA,KAAK,CAAC,uBAAD,CAAL;AACA;AACD;;AAED,gBAAMC,IAAI,GAAG;AACXC,YAAAA,EAAE,EAAEX,MAAM,EADC;AAEXY,YAAAA,IAAI,EAAER,CAAC,CAACE,MAAF,CAASC,KAFJ;AAGXM,YAAAA,IAAI,EAAE;AAHK,WAAb;AAMAT,UAAAA,CAAC,CAACE,MAAF,CAASC,KAAT,GAAiB,EAAjB;AACA,iBAAO,KAAKO,KAAL,CAAWC,OAAX,CAAmBL,IAAnB,CAAP;AACD;AAnBH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAyBD;;AA/B2C;AAAzBR,M,CACZc,S,GAAY;AACjBD,EAAAA,OAAO,EAAEd,SAAS,CAACgB;AADF,C","sourcesContent":["import React, { Component } from \"react\";\nimport { nanoid } from \"nanoid\";\nimport PropTypes from \"prop-types\";\n\nexport default class Header extends Component {\n  static propTypes = {\n    addTodo: PropTypes.func\n  };\n\n  render() {\n    return (\n      <div>\n        <input\n          type=\"text\"\n          placeholder=\"please enter the task name, add enter\"\n          onKeyUp={(e) => {\n            if (e.keyCode !== 13) return;\n\n            if (e.target.value.trim() === \"\") {\n              alert(\"input cannot be empty\");\n              return;\n            }\n\n            const todo = {\n              id: nanoid(),\n              name: e.target.value,\n              done: false\n            };\n\n            e.target.value = \"\";\n            return this.props.addTodo(todo);\n          }}\n        />\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}
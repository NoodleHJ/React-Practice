{"ast":null,"code":"var _jsxFileName = \"/Users/jinghuang/Repository/react/React-Practice/src/pages/Task/index.jsx\";\nimport React from \"react\";\nimport \"./index.css\";\nimport Header from \"../../components/Header\";\nimport List from \"../../components/List\";\nimport Footer from \"../../components/Footer\";\nimport PropTypes from \"prop-types\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default class Task extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      todos: [{\n        id: \"001\",\n        name: \"eact\",\n        done: true\n      }, {\n        id: \"002\",\n        name: \"sleep\",\n        done: false\n      }]\n    };\n\n    this.addTodo = newTodo => {\n      this.setState({\n        todos: [newTodo, ...this.state.todos]\n      });\n    };\n\n    this.updateTodo = (id, done) => {\n      console.log(id, done);\n      const {\n        todos\n      } = this.state;\n      const newTodos = todos.map(item => {\n        if (item.id === id) return { ...item,\n          done: done\n        };else return item;\n      });\n      this.setState({\n        todos: newTodos\n      });\n    };\n\n    this.deleteTodos = id => {\n      const {\n        todos\n      } = this.state;\n      const newTodos = todos.filter(item => item.id !== id);\n      this.setState({\n        todos: newTodos\n      });\n    };\n\n    this.checkAllTodos = done => {\n      const {\n        todos\n      } = this.state;\n      const newTodos = todos.map(item => {\n        return { ...item,\n          done: done\n        };\n      });\n      this.setState({\n        todos: newTodos\n      });\n    };\n\n    this.clearAllDone = () => {\n      const {\n        todos\n      } = this.state;\n      const newTodos = todos.filter(item => item.done === false);\n      this.setState({\n        todos: newTodos\n      });\n    };\n  }\n\n  render() {\n    const {\n      todos\n    } = this.state;\n    console.log(\"render\", todos);\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        addTodo: this.addTodo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(List, {\n        todos: todos,\n        updateTodo: this.updateTodo,\n        deleteTodos: this.deleteTodos\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {\n        todos: todos,\n        checkAllTodos: this.checkAllTodos,\n        clearAllDone: this.clearAllDone\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n}\nTask.propTypes = {\n  id: PropTypes.string,\n  name: PropTypes.string,\n  done: PropTypes.bool\n};","map":{"version":3,"sources":["/Users/jinghuang/Repository/react/React-Practice/src/pages/Task/index.jsx"],"names":["React","Header","List","Footer","PropTypes","Task","Component","state","todos","id","name","done","addTodo","newTodo","setState","updateTodo","console","log","newTodos","map","item","deleteTodos","filter","checkAllTodos","clearAllDone","render","propTypes","string","bool"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"./index.css\";\nimport Header from \"../../components/Header\";\nimport List from \"../../components/List\";\nimport Footer from \"../../components/Footer\";\nimport PropTypes from \"prop-types\";\n\nexport default class Task extends React.Component {\n  static propTypes = {\n    id: PropTypes.string,\n    name: PropTypes.string,\n    done: PropTypes.bool\n  };\n\n  state = {\n    todos: [\n      {\n        id: \"001\",\n        name: \"eact\",\n        done: true\n      },\n      {\n        id: \"002\",\n        name: \"sleep\",\n        done: false\n      }\n    ]\n  };\n\n  addTodo = (newTodo) => {\n    this.setState({ todos: [newTodo, ...this.state.todos] });\n  };\n\n  updateTodo = (id, done) => {\n    console.log(id, done);\n    const { todos } = this.state;\n    const newTodos = todos.map((item) => {\n      if (item.id === id) return { ...item, done: done };\n      else return item;\n    });\n    this.setState({\n      todos: newTodos\n    });\n  };\n\n  deleteTodos = (id) => {\n    const { todos } = this.state;\n    const newTodos = todos.filter((item) => item.id !== id);\n    this.setState({\n      todos: newTodos\n    });\n  };\n\n  checkAllTodos = (done) => {\n    const { todos } = this.state;\n    const newTodos = todos.map((item) => {\n      return { ...item, done: done };\n    });\n    this.setState({\n      todos: newTodos\n    });\n  };\n\n  clearAllDone = () => {\n    const { todos } = this.state;\n    const newTodos = todos.filter((item) => item.done === false);\n    this.setState({\n      todos: newTodos\n    });\n  };\n\n  render() {\n    const { todos } = this.state;\n    console.log(\"render\", todos);\n    return (\n      <>\n        <Header addTodo={this.addTodo}></Header>\n        <List\n          todos={todos}\n          updateTodo={this.updateTodo}\n          deleteTodos={this.deleteTodos}\n        />\n        <Footer\n          todos={todos}\n          checkAllTodos={this.checkAllTodos}\n          clearAllDone={this.clearAllDone}\n        />\n      </>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}
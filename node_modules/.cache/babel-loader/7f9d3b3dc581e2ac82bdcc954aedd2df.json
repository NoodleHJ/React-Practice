{"ast":null,"code":"var _jsxFileName = \"/Users/jinghuang/Repository/react/React-Practice/src/components/Count/index.jsx\";\nimport React, { Component } from \"react\";\nimport store from \"../../redux/store\";\nimport { decrement, incrementAsync, increment } from \"../../redux/actions/count_action\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Count extends Component {\n  constructor() {\n    super(...arguments);\n\n    this.increment = () => {\n      const {\n        value\n      } = this.selectedNumber;\n      store.dispatch(increment(value * 1));\n    };\n\n    this.decrement = () => {\n      const {\n        value\n      } = this.selectedNumber;\n      store.dispatch(decrement(value * 1));\n    };\n\n    this.oddIncrement = () => {\n      const {\n        value\n      } = this.selectedNumber;\n      const count = store.getState();\n\n      if (count % 2 !== 0) {\n        console.log(\"odd\", count);\n        store.dispatch(increment(value * 1));\n      }\n    };\n\n    this.asyncIncrement = () => {\n      const {\n        value\n      } = this.selectedNumber;\n      store.dispatch(incrementAsync(value * 1, 1000));\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Current total: \", store.getState()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        ref: c => this.selectedNumber = c,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"1\",\n          children: \"1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"2\",\n          children: \"2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"3\",\n          children: \"3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), \"\\xA0\", /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.increment,\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), \" \\xA0\", /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.decrement,\n        children: \"-\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), \"\\xA0\", /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.oddIncrement,\n        children: \"Current odd sum +\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), \"\\xA0\", /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.asyncIncrement,\n        children: \"Async+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/jinghuang/Repository/react/React-Practice/src/components/Count/index.jsx"],"names":["React","Component","store","decrement","incrementAsync","increment","Count","value","selectedNumber","dispatch","oddIncrement","count","getState","console","log","asyncIncrement","render","c"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,mBAAlB;AACA,SACEC,SADF,EAEEC,cAFF,EAGEC,SAHF,QAIO,kCAJP;;AAKA,eAAe,MAAMC,KAAN,SAAoBL,SAApB,CAA8B;AAAA;AAAA;;AAAA,SAQ3CI,SAR2C,GAQ/B,MAAM;AAChB,YAAM;AAAEE,QAAAA;AAAF,UAAY,KAAKC,cAAvB;AACAN,MAAAA,KAAK,CAACO,QAAN,CAAeJ,SAAS,CAACE,KAAK,GAAG,CAAT,CAAxB;AACD,KAX0C;;AAAA,SAa3CJ,SAb2C,GAa/B,MAAM;AAChB,YAAM;AAAEI,QAAAA;AAAF,UAAY,KAAKC,cAAvB;AACAN,MAAAA,KAAK,CAACO,QAAN,CAAeN,SAAS,CAACI,KAAK,GAAG,CAAT,CAAxB;AACD,KAhB0C;;AAAA,SAkB3CG,YAlB2C,GAkB5B,MAAM;AACnB,YAAM;AAAEH,QAAAA;AAAF,UAAY,KAAKC,cAAvB;AACA,YAAMG,KAAK,GAAGT,KAAK,CAACU,QAAN,EAAd;;AACA,UAAID,KAAK,GAAG,CAAR,KAAc,CAAlB,EAAqB;AACnBE,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBH,KAAnB;AACAT,QAAAA,KAAK,CAACO,QAAN,CAAeJ,SAAS,CAACE,KAAK,GAAG,CAAT,CAAxB;AACD;AACF,KAzB0C;;AAAA,SA2B3CQ,cA3B2C,GA2B1B,MAAM;AACrB,YAAM;AAAER,QAAAA;AAAF,UAAY,KAAKC,cAAvB;AACAN,MAAAA,KAAK,CAACO,QAAN,CAAeL,cAAc,CAACG,KAAK,GAAG,CAAT,EAAY,IAAZ,CAA7B;AACD,KA9B0C;AAAA;;AAgC3CS,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,8BACE;AAAA,sCAAoBd,KAAK,CAACU,QAAN,EAApB;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAQ,QAAA,GAAG,EAAGK,CAAD,IAAQ,KAAKT,cAAL,GAAsBS,CAA3C;AAAA,gCACE;AAAQ,UAAA,KAAK,EAAC,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAQ,UAAA,KAAK,EAAC,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AAAQ,UAAA,KAAK,EAAC,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,uBAQE;AAAQ,QAAA,OAAO,EAAE,KAAKZ,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARF,wBASE;AAAQ,QAAA,OAAO,EAAE,KAAKF,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cATF,uBAUE;AAAQ,QAAA,OAAO,EAAE,KAAKO,YAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAVF,uBAWE;AAAQ,QAAA,OAAO,EAAE,KAAKK,cAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAXF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAeD;;AAhD0C","sourcesContent":["import React, { Component } from \"react\";\nimport store from \"../../redux/store\";\nimport {\n  decrement,\n  incrementAsync,\n  increment\n} from \"../../redux/actions/count_action\";\nexport default class Count extends Component {\n  /*\n  componentDidMount() {\n    store.subscribe(() => {\n      this.setState({});\n    });\n  }*/\n\n  increment = () => {\n    const { value } = this.selectedNumber;\n    store.dispatch(increment(value * 1));\n  };\n\n  decrement = () => {\n    const { value } = this.selectedNumber;\n    store.dispatch(decrement(value * 1));\n  };\n\n  oddIncrement = () => {\n    const { value } = this.selectedNumber;\n    const count = store.getState();\n    if (count % 2 !== 0) {\n      console.log(\"odd\", count);\n      store.dispatch(increment(value * 1));\n    }\n  };\n\n  asyncIncrement = () => {\n    const { value } = this.selectedNumber;\n    store.dispatch(incrementAsync(value * 1, 1000));\n  };\n\n  render() {\n    return (\n      <div>\n        <h1>Current total: {store.getState()}</h1>\n        <select ref={(c) => (this.selectedNumber = c)}>\n          <option value=\"1\">1</option>\n          <option value=\"2\">2</option>\n          <option value=\"3\">3</option>\n        </select>\n        &nbsp;\n        <button onClick={this.increment}>+</button> &nbsp;\n        <button onClick={this.decrement}>-</button>&nbsp;\n        <button onClick={this.oddIncrement}>Current odd sum +</button>&nbsp;\n        <button onClick={this.asyncIncrement}>Async+</button>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}